/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-highlight-words";
exports.ids = ["vendor-chunks/react-highlight-words"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-highlight-words/dist/main.js":
/*!*********************************************************!*\
  !*** ./node_modules/react-highlight-words/dist/main.js ***!
  \*********************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_187__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_187__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_187__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__nested_webpack_require_187__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__nested_webpack_require_187__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nested_webpack_require_187__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __nested_webpack_require_1468__) {\n\n\tmodule.exports = __nested_webpack_require_1468__(1);\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __nested_webpack_require_1587__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _Highlighter = __nested_webpack_require_1587__(2);\n\t\n\tvar _Highlighter2 = _interopRequireDefault(_Highlighter);\n\n\texports['default'] = _Highlighter2['default'];\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __nested_webpack_require_2043__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\texports['default'] = Highlighter;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\t\n\tvar _highlightWordsCore = __nested_webpack_require_2043__(3);\n\t\n\tvar _react = __nested_webpack_require_2043__(4);\n\t\n\tvar _memoizeOne = __nested_webpack_require_2043__(5);\n\t\n\tvar _memoizeOne2 = _interopRequireDefault(_memoizeOne);\n\t\n\t/**\r\n\t * Highlighter component\r\n\t * @param {object} props - Component properties\r\n\t * @param {string} [props.activeClassName] - The class name to be applied to an active match. Use along with `activeIndex`.\r\n\t * @param {number} [props.activeIndex] - Specify the match index that should be actively highlighted. Use along with `activeClassName`.\r\n\t * @param {object} [props.activeStyle] - The inline style to be applied to an active match. Use along with `activeIndex`.\r\n\t * @param {boolean} [props.autoEscape] - Escape characters in searchWords which are meaningful in regular expressions.\r\n\t * @param {string} [props.className] - CSS class name applied to the outer/wrapper `<span>`.\r\n\t * @param {(options: object) => Array<{start: number, end: number}>} [props.findChunks] - Use a custom function to search for matching chunks.  See the default `findChunks` function in `highlight-words-core` for signature.\r\n\t * @param {string|object} [props.highlightClassName] - CSS class name applied to highlighted text or object mapping search term matches to class names.\r\n\t * @param {object} [props.highlightStyle] - Inline styles applied to highlighted text.\r\n\t * @param {React.ComponentType|string} [props.highlightTag] - Type of tag to wrap around highlighted matches. Defaults to `mark` but can also be a React component (class or functional).\r\n\t * @param {(text: string) => string} [props.sanitize] - Process each search word and text to highlight before comparing.\r\n\t * @param {Array<string|RegExp>} props.searchWords - Array of search words. String search terms are automatically cast to RegExps unless `autoEscape` is true.\r\n\t * @param {string} props.textToHighlight - The text to highlight matches in.\r\n\t * @param {React.ComponentType|string} [props.unhighlightTag] - Type of tag applied to unhighlighted parts. Defaults to `span` but can also be a React component (class or functional).\r\n\t * @param {string} [props.unhighlightClassName] - CSS class name applied to unhighlighted text.\r\n\t * @param {object} [props.unhighlightStyle] - Inline styles applied to the unhighlighted text.\r\n\t * @param {object} [props.rest] - Additional attributes passed to the outer `<span>` element.\r\n\t */\n\t\n\tfunction Highlighter(_ref) {\n\t  var _ref$activeClassName = _ref.activeClassName;\n\t  var activeClassName = _ref$activeClassName === undefined ? '' : _ref$activeClassName;\n\t  var _ref$activeIndex = _ref.activeIndex;\n\t  var activeIndex = _ref$activeIndex === undefined ? -1 : _ref$activeIndex;\n\t  var activeStyle = _ref.activeStyle;\n\t  var autoEscape = _ref.autoEscape;\n\t  var _ref$caseSensitive = _ref.caseSensitive;\n\t  var caseSensitive = _ref$caseSensitive === undefined ? false : _ref$caseSensitive;\n\t  var className = _ref.className;\n\t  var findChunks = _ref.findChunks;\n\t  var _ref$highlightClassName = _ref.highlightClassName;\n\t  var highlightClassName = _ref$highlightClassName === undefined ? '' : _ref$highlightClassName;\n\t  var _ref$highlightStyle = _ref.highlightStyle;\n\t  var highlightStyle = _ref$highlightStyle === undefined ? {} : _ref$highlightStyle;\n\t  var _ref$highlightTag = _ref.highlightTag;\n\t  var highlightTag = _ref$highlightTag === undefined ? 'mark' : _ref$highlightTag;\n\t  var sanitize = _ref.sanitize;\n\t  var searchWords = _ref.searchWords;\n\t  var textToHighlight = _ref.textToHighlight;\n\t  var _ref$unhighlightTag = _ref.unhighlightTag;\n\t  var unhighlightTag = _ref$unhighlightTag === undefined ? 'span' : _ref$unhighlightTag;\n\t  var _ref$unhighlightClassName = _ref.unhighlightClassName;\n\t  var unhighlightClassName = _ref$unhighlightClassName === undefined ? '' : _ref$unhighlightClassName;\n\t  var unhighlightStyle = _ref.unhighlightStyle;\n\t\n\t  var rest = _objectWithoutProperties(_ref, ['activeClassName', 'activeIndex', 'activeStyle', 'autoEscape', 'caseSensitive', 'className', 'findChunks', 'highlightClassName', 'highlightStyle', 'highlightTag', 'sanitize', 'searchWords', 'textToHighlight', 'unhighlightTag', 'unhighlightClassName', 'unhighlightStyle']);\n\t\n\t  var chunks = (0, _highlightWordsCore.findAll)({\n\t    autoEscape: autoEscape,\n\t    caseSensitive: caseSensitive,\n\t    findChunks: findChunks,\n\t    sanitize: sanitize,\n\t    searchWords: searchWords,\n\t    textToHighlight: textToHighlight\n\t  });\n\t  var HighlightTag = highlightTag;\n\t  var highlightIndex = -1;\n\t  var highlightClassNames = '';\n\t  var highlightStyles = undefined;\n\t\n\t  var lowercaseProps = function lowercaseProps(object) {\n\t    var mapped = {};\n\t    for (var key in object) {\n\t      mapped[key.toLowerCase()] = object[key];\n\t    }\n\t    return mapped;\n\t  };\n\t  var memoizedLowercaseProps = (0, _memoizeOne2['default'])(lowercaseProps);\n\t\n\t  return (0, _react.createElement)('span', _extends({\n\t    className: className\n\t  }, rest, {\n\t    children: chunks.map(function (chunk, index) {\n\t      var text = textToHighlight.substr(chunk.start, chunk.end - chunk.start);\n\t\n\t      if (chunk.highlight) {\n\t        highlightIndex++;\n\t\n\t        var highlightClass = undefined;\n\t        if (typeof highlightClassName === 'object') {\n\t          if (!caseSensitive) {\n\t            highlightClassName = memoizedLowercaseProps(highlightClassName);\n\t            highlightClass = highlightClassName[text.toLowerCase()];\n\t          } else {\n\t            highlightClass = highlightClassName[text];\n\t          }\n\t        } else {\n\t          highlightClass = highlightClassName;\n\t        }\n\t\n\t        var isActive = highlightIndex === +activeIndex;\n\t\n\t        highlightClassNames = highlightClass + ' ' + (isActive ? activeClassName : '');\n\t        highlightStyles = isActive === true && activeStyle != null ? Object.assign({}, highlightStyle, activeStyle) : highlightStyle;\n\t\n\t        var props = {\n\t          children: text,\n\t          className: highlightClassNames,\n\t          key: index,\n\t          style: highlightStyles\n\t        };\n\t\n\t        // Don't attach arbitrary props to DOM elements; this triggers React DEV warnings (https://fb.me/react-unknown-prop)\n\t        // Only pass through the highlightIndex attribute for custom components.\n\t        if (typeof HighlightTag !== 'string') {\n\t          props.highlightIndex = highlightIndex;\n\t        }\n\t\n\t        return (0, _react.createElement)(HighlightTag, props);\n\t      } else {\n\t        return (0, _react.createElement)(unhighlightTag, {\n\t          children: text,\n\t          className: unhighlightClassName,\n\t          key: index,\n\t          style: unhighlightStyle\n\t        });\n\t      }\n\t    })\n\t  }));\n\t}\n\t\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\tmodule.exports =\n\t/******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t/******/\n\t/******/ \t// The require function\n\t/******/ \tfunction __nested_webpack_require_9710__(moduleId) {\n\t/******/\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t/******/\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t/******/\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_9710__);\n\t/******/\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t/******/\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t/******/\n\t/******/\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__nested_webpack_require_9710__.m = modules;\n\t/******/\n\t/******/ \t// expose the module cache\n\t/******/ \t__nested_webpack_require_9710__.c = installedModules;\n\t/******/\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__nested_webpack_require_9710__.p = \"\";\n\t/******/\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __nested_webpack_require_9710__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ (function(module, exports, __nested_webpack_require_11030__) {\n\t\n\t\tmodule.exports = __nested_webpack_require_11030__(1);\n\t\n\t\n\t/***/ }),\n\t/* 1 */\n\t/***/ (function(module, exports, __nested_webpack_require_11156__) {\n\t\n\t\t'use strict';\n\t\t\n\t\tObject.defineProperty(exports, \"__esModule\", {\n\t\t  value: true\n\t\t});\n\t\t\n\t\tvar _utils = __nested_webpack_require_11156__(2);\n\t\t\n\t\tObject.defineProperty(exports, 'combineChunks', {\n\t\t  enumerable: true,\n\t\t  get: function get() {\n\t\t    return _utils.combineChunks;\n\t\t  }\n\t\t});\n\t\tObject.defineProperty(exports, 'fillInChunks', {\n\t\t  enumerable: true,\n\t\t  get: function get() {\n\t\t    return _utils.fillInChunks;\n\t\t  }\n\t\t});\n\t\tObject.defineProperty(exports, 'findAll', {\n\t\t  enumerable: true,\n\t\t  get: function get() {\n\t\t    return _utils.findAll;\n\t\t  }\n\t\t});\n\t\tObject.defineProperty(exports, 'findChunks', {\n\t\t  enumerable: true,\n\t\t  get: function get() {\n\t\t    return _utils.findChunks;\n\t\t  }\n\t\t});\n\t\n\t/***/ }),\n\t/* 2 */\n\t/***/ (function(module, exports) {\n\t\n\t\t'use strict';\n\t\t\n\t\tObject.defineProperty(exports, \"__esModule\", {\n\t\t  value: true\n\t\t});\n\t\t/**\n\t\t * Creates an array of chunk objects representing both higlightable and non highlightable pieces of text that match each search word.\n\t\t * @return Array of \"chunks\" (where a Chunk is { start:number, end:number, highlight:boolean })\n\t\t */\n\t\tvar findAll = exports.findAll = function findAll(_ref) {\n\t\t  var autoEscape = _ref.autoEscape,\n\t\t      _ref$caseSensitive = _ref.caseSensitive,\n\t\t      caseSensitive = _ref$caseSensitive === undefined ? false : _ref$caseSensitive,\n\t\t      _ref$findChunks = _ref.findChunks,\n\t\t      findChunks = _ref$findChunks === undefined ? defaultFindChunks : _ref$findChunks,\n\t\t      sanitize = _ref.sanitize,\n\t\t      searchWords = _ref.searchWords,\n\t\t      textToHighlight = _ref.textToHighlight;\n\t\t  return fillInChunks({\n\t\t    chunksToHighlight: combineChunks({\n\t\t      chunks: findChunks({\n\t\t        autoEscape: autoEscape,\n\t\t        caseSensitive: caseSensitive,\n\t\t        sanitize: sanitize,\n\t\t        searchWords: searchWords,\n\t\t        textToHighlight: textToHighlight\n\t\t      })\n\t\t    }),\n\t\t    totalLength: textToHighlight ? textToHighlight.length : 0\n\t\t  });\n\t\t};\n\t\t\n\t\t/**\n\t\t * Takes an array of {start:number, end:number} objects and combines chunks that overlap into single chunks.\n\t\t * @return {start:number, end:number}[]\n\t\t */\n\t\tvar combineChunks = exports.combineChunks = function combineChunks(_ref2) {\n\t\t  var chunks = _ref2.chunks;\n\t\t\n\t\t  chunks = chunks.sort(function (first, second) {\n\t\t    return first.start - second.start;\n\t\t  }).reduce(function (processedChunks, nextChunk) {\n\t\t    // First chunk just goes straight in the array...\n\t\t    if (processedChunks.length === 0) {\n\t\t      return [nextChunk];\n\t\t    } else {\n\t\t      // ... subsequent chunks get checked to see if they overlap...\n\t\t      var prevChunk = processedChunks.pop();\n\t\t      if (nextChunk.start <= prevChunk.end) {\n\t\t        // It may be the case that prevChunk completely surrounds nextChunk, so take the\n\t\t        // largest of the end indeces.\n\t\t        var endIndex = Math.max(prevChunk.end, nextChunk.end);\n\t\t        processedChunks.push({ start: prevChunk.start, end: endIndex });\n\t\t      } else {\n\t\t        processedChunks.push(prevChunk, nextChunk);\n\t\t      }\n\t\t      return processedChunks;\n\t\t    }\n\t\t  }, []);\n\t\t\n\t\t  return chunks;\n\t\t};\n\t\t\n\t\t/**\n\t\t * Examine text for any matches.\n\t\t * If we find matches, add them to the returned array as a \"chunk\" object ({start:number, end:number}).\n\t\t * @return {start:number, end:number}[]\n\t\t */\n\t\tvar defaultFindChunks = function defaultFindChunks(_ref3) {\n\t\t  var autoEscape = _ref3.autoEscape,\n\t\t      caseSensitive = _ref3.caseSensitive,\n\t\t      _ref3$sanitize = _ref3.sanitize,\n\t\t      sanitize = _ref3$sanitize === undefined ? identity : _ref3$sanitize,\n\t\t      searchWords = _ref3.searchWords,\n\t\t      textToHighlight = _ref3.textToHighlight;\n\t\t\n\t\t  textToHighlight = sanitize(textToHighlight);\n\t\t\n\t\t  return searchWords.filter(function (searchWord) {\n\t\t    return searchWord;\n\t\t  }) // Remove empty words\n\t\t  .reduce(function (chunks, searchWord) {\n\t\t    searchWord = sanitize(searchWord);\n\t\t\n\t\t    if (autoEscape) {\n\t\t      searchWord = escapeRegExpFn(searchWord);\n\t\t    }\n\t\t\n\t\t    var regex = new RegExp(searchWord, caseSensitive ? 'g' : 'gi');\n\t\t\n\t\t    var match = void 0;\n\t\t    while (match = regex.exec(textToHighlight)) {\n\t\t      var start = match.index;\n\t\t      var end = regex.lastIndex;\n\t\t      // We do not return zero-length matches\n\t\t      if (end > start) {\n\t\t        chunks.push({ start: start, end: end });\n\t\t      }\n\t\t\n\t\t      // Prevent browsers like Firefox from getting stuck in an infinite loop\n\t\t      // See http://www.regexguru.com/2008/04/watch-out-for-zero-length-matches/\n\t\t      if (match.index == regex.lastIndex) {\n\t\t        regex.lastIndex++;\n\t\t      }\n\t\t    }\n\t\t\n\t\t    return chunks;\n\t\t  }, []);\n\t\t};\n\t\t// Allow the findChunks to be overridden in findAll,\n\t\t// but for backwards compatibility we export as the old name\n\t\texports.findChunks = defaultFindChunks;\n\t\t\n\t\t/**\n\t\t * Given a set of chunks to highlight, create an additional set of chunks\n\t\t * to represent the bits of text between the highlighted text.\n\t\t * @param chunksToHighlight {start:number, end:number}[]\n\t\t * @param totalLength number\n\t\t * @return {start:number, end:number, highlight:boolean}[]\n\t\t */\n\t\t\n\t\tvar fillInChunks = exports.fillInChunks = function fillInChunks(_ref4) {\n\t\t  var chunksToHighlight = _ref4.chunksToHighlight,\n\t\t      totalLength = _ref4.totalLength;\n\t\t\n\t\t  var allChunks = [];\n\t\t  var append = function append(start, end, highlight) {\n\t\t    if (end - start > 0) {\n\t\t      allChunks.push({\n\t\t        start: start,\n\t\t        end: end,\n\t\t        highlight: highlight\n\t\t      });\n\t\t    }\n\t\t  };\n\t\t\n\t\t  if (chunksToHighlight.length === 0) {\n\t\t    append(0, totalLength, false);\n\t\t  } else {\n\t\t    var lastIndex = 0;\n\t\t    chunksToHighlight.forEach(function (chunk) {\n\t\t      append(lastIndex, chunk.start, false);\n\t\t      append(chunk.start, chunk.end, true);\n\t\t      lastIndex = chunk.end;\n\t\t    });\n\t\t    append(lastIndex, totalLength, false);\n\t\t  }\n\t\t  return allChunks;\n\t\t};\n\t\t\n\t\tfunction identity(value) {\n\t\t  return value;\n\t\t}\n\t\t\n\t\tfunction escapeRegExpFn(str) {\n\t\t  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n\t\t}\n\t\n\t/***/ })\n\t/******/ ]);\n\t//# sourceMappingURL=index.js.map\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/route-modules/app-page/vendored/ssr/react.js\");\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tvar simpleIsEqual = function simpleIsEqual(a, b) {\n\t  return a === b;\n\t};\n\t\n\tfunction index (resultFn) {\n\t  var isEqual = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : simpleIsEqual;\n\t\n\t  var lastThis = void 0;\n\t  var lastArgs = [];\n\t  var lastResult = void 0;\n\t  var calledOnce = false;\n\t\n\t  var isNewArgEqualToLast = function isNewArgEqualToLast(newArg, index) {\n\t    return isEqual(newArg, lastArgs[index]);\n\t  };\n\t\n\t  var result = function result() {\n\t    for (var _len = arguments.length, newArgs = Array(_len), _key = 0; _key < _len; _key++) {\n\t      newArgs[_key] = arguments[_key];\n\t    }\n\t\n\t    if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {\n\t      return lastResult;\n\t    }\n\t\n\t    calledOnce = true;\n\t    lastThis = this;\n\t    lastArgs = newArgs;\n\t    lastResult = resultFn.apply(this, newArgs);\n\t    return lastResult;\n\t  };\n\t\n\t  return result;\n\t}\n\t\n\tmodule.exports = index;\n\n\n/***/ })\n/******/ ]);\n//# sourceMappingURL=main.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtaGlnaGxpZ2h0LXdvcmRzL2Rpc3QvbWFpbi5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQiw4QkFBbUI7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBFQUEwRSw4QkFBbUI7QUFDN0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLDhCQUFtQjtBQUM3QjtBQUNBO0FBQ0EsVUFBVSw4QkFBbUI7QUFDN0I7QUFDQTtBQUNBLFVBQVUsOEJBQW1CO0FBQzdCO0FBQ0E7QUFDQSxpQkFBaUIsOEJBQW1CO0FBQ3BDLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsK0JBQW1COztBQUVwRCxrQkFBa0IsK0JBQW1COzs7QUFHckMsT0FBTztBQUNQO0FBQ0EsaUNBQWlDLCtCQUFtQjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQSx3Q0FBd0MsdUNBQXVDO0FBQy9FO0FBQ0Esb0JBQW9CLCtCQUFtQjtBQUN2QztBQUNBOztBQUVBO0FBQ0E7O0FBRUEsT0FBTztBQUNQO0FBQ0EsaUNBQWlDLCtCQUFtQjs7QUFFcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxFQUFFO0FBQ0Y7QUFDQSxxREFBcUQsZ0JBQWdCLHNCQUFzQixPQUFPLDJCQUEyQiwwQkFBMEIseURBQXlELGlDQUFpQztBQUNqUDtBQUNBO0FBQ0E7QUFDQSx3Q0FBd0MsdUNBQXVDO0FBQy9FO0FBQ0EsZ0RBQWdELGlCQUFpQixxQkFBcUIsb0NBQW9DLDZEQUE2RCxzQkFBc0I7QUFDN007QUFDQSwyQkFBMkIsK0JBQW1CO0FBQzlDO0FBQ0EsY0FBYywrQkFBbUI7QUFDakM7QUFDQSxtQkFBbUIsK0JBQW1CO0FBQ3RDO0FB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QTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdFQUF3RSxhQUFhO0FBQ3JGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBR0EsT0FBTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9reWxlbWNncmF3L0RvY3VtZW50cy9HaXRIdWIvcG9ydGZvbGlvdjIvbm9kZV9tb2R1bGVzL3JlYWN0LWhpZ2hsaWdodC13b3Jkcy9kaXN0L21haW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPVxuLyoqKioqKi8gKGZ1bmN0aW9uKG1vZHVsZXMpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuLyoqKioqKi8gXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4vKioqKioqLyBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuLyoqKioqKi8gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuLyoqKioqKi8gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKVxuLyoqKioqKi8gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4vKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuLyoqKioqKi8gXHRcdFx0ZXhwb3J0czoge30sXG4vKioqKioqLyBcdFx0XHRpZDogbW9kdWxlSWQsXG4vKioqKioqLyBcdFx0XHRsb2FkZWQ6IGZhbHNlXG4vKioqKioqLyBcdFx0fTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4vKioqKioqLyBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG4vKioqKioqL1xuLyoqKioqKi8gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbi8qKioqKiovIFx0XHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcbi8qKioqKiovXG4vKioqKioqLyBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbi8qKioqKiovIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4vKioqKioqLyBcdH1cbi8qKioqKiovXG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBleHBvc2UgdGhlIG1vZHVsZXMgb2JqZWN0IChfX3dlYnBhY2tfbW9kdWxlc19fKVxuLyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuLyoqKioqKi9cbi8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGUgY2FjaGVcbi8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcbi8qKioqKiovXG4vKioqKioqLyBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4vKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG4vKioqKioqL1xuLyoqKioqKi8gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbi8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMCk7XG4vKioqKioqLyB9KVxuLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbi8qKioqKiovIChbXG4vKiAwICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblx0bW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDEpO1xuXG5cbi8qKiovIH0pLFxuLyogMSAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXG5cdCd1c2Ugc3RyaWN0Jztcblx0XG5cdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHtcblx0ICB2YWx1ZTogdHJ1ZVxuXHR9KTtcblx0XG5cdGZ1bmN0aW9uIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQob2JqKSB7IHJldHVybiBvYmogJiYgb2JqLl9fZXNNb2R1bGUgPyBvYmogOiB7ICdkZWZhdWx0Jzogb2JqIH07IH1cblx0XG5cdHZhciBfSGlnaGxpZ2h0ZXIgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuXHRcblx0dmFyIF9IaWdobGlnaHRlcjIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9IaWdobGlnaHRlcik7XG5cblx0ZXhwb3J0c1snZGVmYXVsdCddID0gX0hpZ2hsaWdodGVyMlsnZGVmYXVsdCddO1xuXHRtb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTtcblxuLyoqKi8gfSksXG4vKiAyICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKSB7XG5cblx0J3VzZSBzdHJpY3QnO1xuXHRcblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywge1xuXHQgIHZhbHVlOiB0cnVlXG5cdH0pO1xuXHRcblx0dmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblx0XG5cdGV4cG9ydHNbJ2RlZmF1bHQnXSA9IEhpZ2hsaWdodGVyO1xuXHRcblx0ZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgJ2RlZmF1bHQnOiBvYmogfTsgfVxuXHRcblx0ZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXHRcblx0dmFyIF9oaWdobGlnaHRXb3Jkc0NvcmUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDMpO1xuXHRcblx0dmFyIF9yZWFjdCA9IF9fd2VicGFja19yZXF1aXJlX18oNCk7XG5cdFxuXHR2YXIgX21lbW9pemVPbmUgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDUpO1xuXHRcblx0dmFyIF9tZW1vaXplT25lMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX21lbW9pemVPbmUpO1xuXHRcblx0LyoqXHJcblx0ICogSGlnaGxpZ2h0ZXIgY29tcG9uZW50XHJcblx0ICogQHBhcmFtIHtvYmplY3R9IHByb3BzIC0gQ29tcG9uZW50IHByb3BlcnRpZXNcclxuXHQgKiBAcGFyYW0ge3N0cmluZ30gW3Byb3BzLmFjdGl2ZUNsYXNzTmFtZV0gLSBUaGUgY2xhc3MgbmFtZSB0byBiZSBhcHBsaWVkIHRvIGFuIGFjdGl2ZSBtYXRjaC4gVXNlIGFsb25nIHdpdGggYGFjdGl2ZUluZGV4YC5cclxuXHQgKiBAcGFyYW0ge251bWJlcn0gW3Byb3BzLmFjdGl2ZUluZGV4XSAtIFNwZWNpZnkgdGhlIG1hdGNoIGluZGV4IHRoYXQgc2hvdWxkIGJlIGFjdGl2ZWx5IGhpZ2hsaWdodGVkLiBVc2UgYWxvbmcgd2l0aCBgYWN0aXZlQ2xhc3NOYW1lYC5cclxuXHQgKiBAcGFyYW0ge29iamVjdH0gW3Byb3BzLmFjdGl2ZVN0eWxlXSAtIFRoZSBpbmxpbmUgc3R5bGUgdG8gYmUgYXBwbGllZCB0byBhbiBhY3RpdmUgbWF0Y2guIFVzZSBhbG9uZyB3aXRoIGBhY3RpdmVJbmRleGAuXHJcblx0ICogQHBhcmFtIHtib29sZWFufSBbcHJvcHMuYXV0b0VzY2FwZV0gLSBFc2NhcGUgY2hhcmFjdGVycyBpbiBzZWFyY2hXb3JkcyB3aGljaCBhcmUgbWVhbmluZ2Z1bCBpbiByZWd1bGFyIGV4cHJlc3Npb25zLlxyXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBbcHJvcHMuY2xhc3NOYW1lXSAtIENTUyBjbGFzcyBuYW1lIGFwcGxpZWQgdG8gdGhlIG91dGVyL3dyYXBwZXIgYDxzcGFuPmAuXHJcblx0ICogQHBhcmFtIHsob3B0aW9uczogb2JqZWN0KSA9PiBBcnJheTx7c3RhcnQ6IG51bWJlciwgZW5kOiBudW1iZXJ9Pn0gW3Byb3BzLmZpbmRDaHVua3NdIC0gVXNlIGEgY3VzdG9tIGZ1bmN0aW9uIHRvIHNlYXJjaCBmb3IgbWF0Y2hpbmcgY2h1bmtzLiAgU2VlIHRoZSBkZWZhdWx0IGBmaW5kQ2h1bmtzYCBmdW5jdGlvbiBpbiBgaGlnaGxpZ2h0LXdvcmRzLWNvcmVgIGZvciBzaWduYXR1cmUuXHJcblx0ICogQHBhcmFtIHtzdHJpbmd8b2JqZWN0fSBbcHJvcHMuaGlnaGxpZ2h0Q2xhc3NOYW1lXSAtIENTUyBjbGFzcyBuYW1lIGFwcGxpZWQgdG8gaGlnaGxpZ2h0ZWQgdGV4dCBvciBvYmplY3QgbWFwcGluZyBzZWFyY2ggdGVybSBtYXRjaGVzIHRvIGNsYXNzIG5hbWVzLlxyXG5cdCAqIEBwYXJhbSB7b2JqZWN0fSBbcHJvcHMuaGlnaGxpZ2h0U3R5bGVdIC0gSW5saW5lIHN0eWxlcyBhcHBsaWVkIHRvIGhpZ2hsaWdodGVkIHRleHQuXHJcblx0ICogQHBhcmFtIHtSZWFjdC5Db21wb25lbnRUeXBlfHN0cmluZ30gW3Byb3BzLmhpZ2hsaWdodFRhZ10gLSBUeXBlIG9mIHRhZyB0byB3cmFwIGFyb3VuZCBoaWdobGlnaHRlZCBtYXRjaGVzLiBEZWZhdWx0cyB0byBgbWFya2AgYnV0IGNhbiBhbHNvIGJlIGEgUmVhY3QgY29tcG9uZW50IChjbGFzcyBvciBmdW5jdGlvbmFsKS5cclxuXHQgKiBAcGFyYW0geyh0ZXh0OiBzdHJpbmcpID0+IHN0cmluZ30gW3Byb3BzLnNhbml0aXplXSAtIFByb2Nlc3MgZWFjaCBzZWFyY2ggd29yZCBhbmQgdGV4dCB0byBoaWdobGlnaHQgYmVmb3JlIGNvbXBhcmluZy5cclxuXHQgKiBAcGFyYW0ge0FycmF5PHN0cmluZ3xSZWdFeHA+fSBwcm9wcy5zZWFyY2hXb3JkcyAtIEFycmF5IG9mIHNlYXJjaCB3b3Jkcy4gU3RyaW5nIHNlYXJjaCB0ZXJtcyBhcmUgYXV0b21hdGljYWxseSBjYXN0IHRvIFJlZ0V4cHMgdW5sZXNzIGBhdXRvRXNjYXBlYCBpcyB0cnVlLlxyXG5cdCAqIEBwYXJhbSB7c3RyaW5nfSBwcm9wcy50ZXh0VG9IaWdobGlnaHQgLSBUaGUgdGV4dCB0byBoaWdobGlnaHQgbWF0Y2hlcyBpbi5cclxuXHQgKiBAcGFyYW0ge1JlYWN0LkNvbXBvbmVudFR5cGV8c3RyaW5nfSBbcHJvcHMudW5oaWdobGlnaHRUYWddIC0gVHlwZSBvZiB0YWcgYXBwbGllZCB0byB1bmhpZ2hsaWdodGVkIHBhcnRzLiBEZWZhdWx0cyB0byBgc3BhbmAgYnV0IGNhbiBhbHNvIGJlIGEgUmVhY3QgY29tcG9uZW50IChjbGFzcyBvciBmdW5jdGlvbmFsKS5cclxuXHQgKiBAcGFyYW0ge3N0cmluZ30gW3Byb3BzLnVuaGlnaGxpZ2h0Q2xhc3NOYW1lXSAtIENTUyBjbGFzcyBuYW1lIGFwcGxpZWQgdG8gdW5oaWdobGlnaHRlZCB0ZXh0LlxyXG5cdCAqIEBwYXJhbSB7b2JqZWN0fSBbcHJvcHMudW5oaWdobGlnaHRTdHlsZV0gLSBJbmxpbmUgc3R5bGVzIGFwcGxpZWQgdG8gdGhlIHVuaGlnaGxpZ2h0ZWQgdGV4dC5cclxuXHQgKiBAcGFyYW0ge29iamVjdH0gW3Byb3BzLnJlc3RdIC0gQWRkaXRpb25hbCBhdHRyaWJ1dGVzIHBhc3NlZCB0byB0aGUgb3V0ZXIgYDxzcGFuPmAgZWxlbWVudC5cclxuXHQgKi9cblx0XG5cdGZ1bmN0aW9uIEhpZ2hsaWdodGVyKF9yZWYpIHtcblx0ICB2YXIgX3JlZiRhY3RpdmVDbGFzc05hbWUgPSBfcmVmLmFjdGl2ZUNsYXNzTmFtZTtcblx0ICB2YXIgYWN0aXZlQ2xhc3NOYW1lID0gX3JlZiRhY3RpdmVDbGFzc05hbWUgPT09IHVuZGVmaW5lZCA/ICcnIDogX3JlZiRhY3RpdmVDbGFzc05hbWU7XG5cdCAgdmFyIF9yZWYkYWN0aXZlSW5kZXggPSBfcmVmLmFjdGl2ZUluZGV4O1xuXHQgIHZhciBhY3RpdmVJbmRleCA9IF9yZWYkYWN0aXZlSW5kZXggPT09IHVuZGVmaW5lZCA/IC0xIDogX3JlZiRhY3RpdmVJbmRleDtcblx0ICB2YXIgYWN0aXZlU3R5bGUgPSBfcmVmLmFjdGl2ZVN0eWxlO1xuXHQgIHZhciBhdXRvRXNjYXBlID0gX3JlZi5hdXRvRXNjYXBlO1xuXHQgIHZhciBfcmVmJGNhc2VTZW5zaXRpdmUgPSBfcmVmLmNhc2VTZW5zaXRpdmU7XG5cdCAgdmFyIGNhc2VTZW5zaXRpdmUgPSBfcmVmJGNhc2VTZW5zaXRpdmUgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX3JlZiRjYXNlU2Vuc2l0aXZlO1xuXHQgIHZhciBjbGFzc05hbWUgPSBfcmVmLmNsYXNzTmFtZTtcblx0ICB2YXIgZmluZENodW5rcyA9IF9yZWYuZmluZENodW5rcztcblx0ICB2YXIgX3JlZiRoaWdobGlnaHRDbGFzc05hbWUgPSBfcmVmLmhpZ2hsaWdodENsYXNzTmFtZTtcblx0ICB2YXIgaGlnaGxpZ2h0Q2xhc3NOYW1lID0gX3JlZiRoaWdobGlnaHRDbGFzc05hbWUgPT09IHVuZGVmaW5lZCA/ICcnIDogX3JlZiRoaWdobGlnaHRDbGFzc05hbWU7XG5cdCAgdmFyIF9yZWYkaGlnaGxpZ2h0U3R5bGUgPSBfcmVmLmhpZ2hsaWdodFN0eWxlO1xuXHQgIHZhciBoaWdobGlnaHRTdHlsZSA9IF9yZWYkaGlnaGxpZ2h0U3R5bGUgPT09IHVuZGVmaW5lZCA/IHt9IDogX3JlZiRoaWdobGlnaHRTdHlsZTtcblx0ICB2YXIgX3JlZiRoaWdobGlnaHRUYWcgPSBfcmVmLmhpZ2hsaWdodFRhZztcblx0ICB2YXIgaGlnaGxpZ2h0VGFnID0gX3JlZiRoaWdobGlnaHRUYWcgPT09IHVuZGVmaW5lZCA/ICdtYXJrJyA6IF9yZWYkaGlnaGxpZ2h0VGFnO1xuXHQgIHZhciBzYW5pdGl6ZSA9IF9yZWYuc2FuaXRpemU7XG5cdCAgdmFyIHNlYXJjaFdvcmRzID0gX3JlZi5zZWFyY2hXb3Jkcztcblx0ICB2YXIgdGV4dFRvSGlnaGxpZ2h0ID0gX3JlZi50ZXh0VG9IaWdobGlnaHQ7XG5cdCAgdmFyIF9yZWYkdW5oaWdobGlnaHRUYWcgPSBfcmVmLnVuaGlnaGxpZ2h0VGFnO1xuXHQgIHZhciB1bmhpZ2hsaWdodFRhZyA9IF9yZWYkdW5oaWdobGlnaHRUYWcgPT09IHVuZGVmaW5lZCA/ICdzcGFuJyA6IF9yZWYkdW5oaWdobGlnaHRUYWc7XG5cdCAgdmFyIF9yZWYkdW5oaWdobGlnaHRDbGFzc05hbWUgPSBfcmVmLnVuaGlnaGxpZ2h0Q2xhc3NOYW1lO1xuXHQgIHZhciB1bmhpZ2hsaWdodENsYXNzTmFtZSA9IF9yZWYkdW5oaWdobGlnaHRDbGFzc05hbWUgPT09IHVuZGVmaW5lZCA/ICcnIDogX3JlZiR1bmhpZ2hsaWdodENsYXNzTmFtZTtcblx0ICB2YXIgdW5oaWdobGlnaHRTdHlsZSA9IF9yZWYudW5oaWdobGlnaHRTdHlsZTtcblx0XG5cdCAgdmFyIHJlc3QgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgWydhY3RpdmVDbGFzc05hbWUnLCAnYWN0aXZlSW5kZXgnLCAnYWN0aXZlU3R5bGUnLCAnYXV0b0VzY2FwZScsICdjYXNlU2Vuc2l0aXZlJywgJ2NsYXNzTmFtZScsICdmaW5kQ2h1bmtzJywgJ2hpZ2hsaWdodENsYXNzTmFtZScsICdoaWdobGlnaHRTdHlsZScsICdoaWdobGlnaHRUYWcnLCAnc2FuaXRpemUnLCAnc2VhcmNoV29yZHMnLCAndGV4dFRvSGlnaGxpZ2h0JywgJ3VuaGlnaGxpZ2h0VGFnJywgJ3VuaGlnaGxpZ2h0Q2xhc3NOYW1lJywgJ3VuaGlnaGxpZ2h0U3R5bGUnXSk7XG5cdFxuXHQgIHZhciBjaHVua3MgPSAoMCwgX2hpZ2hsaWdodFdvcmRzQ29yZS5maW5kQWxsKSh7XG5cdCAgICBhdXRvRXNjYXBlOiBhdXRvRXNjYXBlLFxuXHQgICAgY2FzZVNlbnNpdGl2ZTogY2FzZVNlbnNpdGl2ZSxcblx0ICAgIGZpbmRDaHVua3M6IGZpbmRDaHVua3MsXG5cdCAgICBzYW5pdGl6ZTogc2FuaXRpemUsXG5cdCAgICBzZWFyY2hXb3Jkczogc2VhcmNoV29yZHMsXG5cdCAgICB0ZXh0VG9IaWdobGlnaHQ6IHRleHRUb0hpZ2hsaWdodFxuXHQgIH0pO1xuXHQgIHZhciBIaWdobGlnaHRUYWcgPSBoaWdobGlnaHRUYWc7XG5cdCAgdmFyIGhpZ2hsaWdodEluZGV4ID0gLTE7XG5cdCAgdmFyIGhpZ2hsaWdodENsYXNzTmFtZXMgPSAnJztcblx0ICB2YXIgaGlnaGxpZ2h0U3R5bGVzID0gdW5kZWZpbmVkO1xuXHRcblx0ICB2YXIgbG93ZXJjYXNlUHJvcHMgPSBmdW5jdGlvbiBsb3dlcmNhc2VQcm9wcyhvYmplY3QpIHtcblx0ICAgIHZhciBtYXBwZWQgPSB7fTtcblx0ICAgIGZvciAodmFyIGtleSBpbiBvYmplY3QpIHtcblx0ICAgICAgbWFwcGVkW2tleS50b0xvd2VyQ2FzZSgpXSA9IG9iamVjdFtrZXldO1xuXHQgICAgfVxuXHQgICAgcmV0dXJuIG1hcHBlZDtcblx0ICB9O1xuXHQgIHZhciBtZW1vaXplZExvd2VyY2FzZVByb3BzID0gKDAsIF9tZW1vaXplT25lMlsnZGVmYXVsdCddKShsb3dlcmNhc2VQcm9wcyk7XG5cdFxuXHQgIHJldHVybiAoMCwgX3JlYWN0LmNyZWF0ZUVsZW1lbnQpKCdzcGFuJywgX2V4dGVuZHMoe1xuXHQgICAgY2xhc3NOYW1lOiBjbGFzc05hbWVcblx0ICB9LCByZXN0LCB7XG5cdCAgICBjaGlsZHJlbjogY2h1bmtzLm1hcChmdW5jdGlvbiAoY2h1bmssIGluZGV4KSB7XG5cdCAgICAgIHZhciB0ZXh0ID0gdGV4dFRvSGlnaGxpZ2h0LnN1YnN0cihjaHVuay5zdGFydCwgY2h1bmsuZW5kIC0gY2h1bmsuc3RhcnQpO1xuXHRcblx0ICAgICAgaWYgKGNodW5rLmhpZ2hsaWdodCkge1xuXHQgICAgICAgIGhpZ2hsaWdodEluZGV4Kys7XG5cdFxuXHQgICAgICAgIHZhciBoaWdobGlnaHRDbGFzcyA9IHVuZGVmaW5lZDtcblx0ICAgICAgICBpZiAodHlwZW9mIGhpZ2hsaWdodENsYXNzTmFtZSA9PT0gJ29iamVjdCcpIHtcblx0ICAgICAgICAgIGlmICghY2FzZVNlbnNpdGl2ZSkge1xuXHQgICAgICAgICAgICBoaWdobGlnaHRDbGFzc05hbWUgPSBtZW1vaXplZExvd2VyY2FzZVByb3BzKGhpZ2hsaWdodENsYXNzTmFtZSk7XG5cdCAgICAgICAgICAgIGhpZ2hsaWdodENsYXNzID0gaGlnaGxpZ2h0Q2xhc3NOYW1lW3RleHQudG9Mb3dlckNhc2UoKV07XG5cdCAgICAgICAgICB9IGVsc2Uge1xuXHQgICAgICAgICAgICBoaWdobGlnaHRDbGFzcyA9IGhpZ2hsaWdodENsYXNzTmFtZVt0ZXh0XTtcblx0ICAgICAgICAgIH1cblx0ICAgICAgICB9IGVsc2Uge1xuXHQgICAgICAgICAgaGlnaGxpZ2h0Q2xhc3MgPSBoaWdobGlnaHRDbGFzc05hbWU7XG5cdCAgICAgICAgfVxuXHRcblx0ICAgICAgICB2YXIgaXNBY3RpdmUgPSBoaWdobGlnaHRJbmRleCA9PT0gK2FjdGl2ZUluZGV4O1xuXHRcblx0ICAgICAgICBoaWdobGlnaHRDbGFzc05hbWVzID0gaGlnaGxpZ2h0Q2xhc3MgKyAnICcgKyAoaXNBY3RpdmUgPyBhY3RpdmVDbGFzc05hbWUgOiAnJyk7XG5cdCAgICAgICAgaGlnaGxpZ2h0U3R5bGVzID0gaXNBY3RpdmUgPT09IHRydWUgJiYgYWN0aXZlU3R5bGUgIT0gbnVsbCA/IE9iamVjdC5hc3NpZ24oe30sIGhpZ2hsaWdodFN0eWxlLCBhY3RpdmVTdHlsZSkgOiBoaWdobGlnaHRTdHlsZTtcblx0XG5cdCAgICAgICAgdmFyIHByb3BzID0ge1xuXHQgICAgICAgICAgY2hpbGRyZW46IHRleHQsXG5cdCAgICAgICAgICBjbGFzc05hbWU6IGhpZ2hsaWdodENsYXNzTmFtZXMsXG5cdCAgICAgICAgICBrZXk6IGluZGV4LFxuXHQgICAgICAgICAgc3R5bGU6IGhpZ2hsaWdodFN0eWxlc1xuXHQgICAgICAgIH07XG5cdFxuXHQgICAgICAgIC8vIERvbid0IGF0dGFjaCBhcmJpdHJhcnkgcHJvcHMgdG8gRE9NIGVsZW1lbnRzOyB0aGlzIHRyaWdnZXJzIFJlYWN0IERFViB3YXJuaW5ncyAoaHR0cHM6Ly9mYi5tZS9yZWFjdC11bmtub3duLXByb3ApXG5cdCAgICAgICAgLy8gT25seSBwYXNzIHRocm91Z2ggdGhlIGhpZ2hsaWdodEluZGV4IGF0dHJpYnV0ZSBmb3IgY3VzdG9tIGNvbXBvbmVudHMuXG5cdCAgICAgICAgaWYgKHR5cGVvZiBIaWdobGlnaHRUYWcgIT09ICdzdHJpbmcnKSB7XG5cdCAgICAgICAgICBwcm9wcy5oaWdobGlnaHRJbmRleCA9IGhpZ2hsaWdodEluZGV4O1xuXHQgICAgICAgIH1cblx0XG5cdCAgICAgICAgcmV0dXJuICgwLCBfcmVhY3QuY3JlYXRlRWxlbWVudCkoSGlnaGxpZ2h0VGFnLCBwcm9wcyk7XG5cdCAgICAgIH0gZWxzZSB7XG5cdCAgICAgICAgcmV0dXJuICgwLCBfcmVhY3QuY3JlYXRlRWxlbWVudCkodW5oaWdobGlnaHRUYWcsIHtcblx0ICAgICAgICAgIGNoaWxkcmVuOiB0ZXh0LFxuXHQgICAgICAgICAgY2xhc3NOYW1lOiB1bmhpZ2hsaWdodENsYXNzTmFtZSxcblx0ICAgICAgICAgIGtleTogaW5kZXgsXG5cdCAgICAgICAgICBzdHlsZTogdW5oaWdobGlnaHRTdHlsZVxuXHQgICAgICAgIH0pO1xuXHQgICAgICB9XG5cdCAgICB9KVxuXHQgIH0pKTtcblx0fVxuXHRcblx0bW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107XG5cbi8qKiovIH0pLFxuLyogMyAqL1xuLyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cykge1xuXG5cdG1vZHVsZS5leHBvcnRzID1cblx0LyoqKioqKi8gKGZ1bmN0aW9uKG1vZHVsZXMpIHsgLy8gd2VicGFja0Jvb3RzdHJhcFxuXHQvKioqKioqLyBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcblx0LyoqKioqKi8gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5cdC8qKioqKiovIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdC8qKioqKiovIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcblx0LyoqKioqKi8gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHQvKioqKioqLyBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuXHQvKioqKioqLyBcdFx0XHRleHBvcnRzOiB7fSxcblx0LyoqKioqKi8gXHRcdFx0aWQ6IG1vZHVsZUlkLFxuXHQvKioqKioqLyBcdFx0XHRsb2FkZWQ6IGZhbHNlXG5cdC8qKioqKiovIFx0XHR9O1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdC8qKioqKiovIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcblx0LyoqKioqKi8gXHRcdG1vZHVsZS5sb2FkZWQgPSB0cnVlO1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0LyoqKioqKi8gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcblx0LyoqKioqKi8gXHR9XG5cdC8qKioqKiovXG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcblx0LyoqKioqKi8gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXHQvKioqKioqL1xuXHQvKioqKioqLyBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG5cdC8qKioqKiovIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblx0LyoqKioqKi9cblx0LyoqKioqKi8gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuXHQvKioqKioqLyBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cdC8qKioqKiovXG5cdC8qKioqKiovIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG5cdC8qKioqKiovIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cdC8qKioqKiovIH0pXG5cdC8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovXG5cdC8qKioqKiovIChbXG5cdC8qIDAgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHRtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19yZXF1aXJlX18oMSk7XG5cdFxuXHRcblx0LyoqKi8gfSksXG5cdC8qIDEgKi9cblx0LyoqKi8gKGZ1bmN0aW9uKG1vZHVsZSwgZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXykge1xuXHRcblx0XHQndXNlIHN0cmljdCc7XG5cdFx0XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG5cdFx0ICB2YWx1ZTogdHJ1ZVxuXHRcdH0pO1xuXHRcdFxuXHRcdHZhciBfdXRpbHMgPSBfX3dlYnBhY2tfcmVxdWlyZV9fKDIpO1xuXHRcdFxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnY29tYmluZUNodW5rcycsIHtcblx0XHQgIGVudW1lcmFibGU6IHRydWUsXG5cdFx0ICBnZXQ6IGZ1bmN0aW9uIGdldCgpIHtcblx0XHQgICAgcmV0dXJuIF91dGlscy5jb21iaW5lQ2h1bmtzO1xuXHRcdCAgfVxuXHRcdH0pO1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnZmlsbEluQ2h1bmtzJywge1xuXHRcdCAgZW51bWVyYWJsZTogdHJ1ZSxcblx0XHQgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuXHRcdCAgICByZXR1cm4gX3V0aWxzLmZpbGxJbkNodW5rcztcblx0XHQgIH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ2ZpbmRBbGwnLCB7XG5cdFx0ICBlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdCAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG5cdFx0ICAgIHJldHVybiBfdXRpbHMuZmluZEFsbDtcblx0XHQgIH1cblx0XHR9KTtcblx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ2ZpbmRDaHVua3MnLCB7XG5cdFx0ICBlbnVtZXJhYmxlOiB0cnVlLFxuXHRcdCAgZ2V0OiBmdW5jdGlvbiBnZXQoKSB7XG5cdFx0ICAgIHJldHVybiBfdXRpbHMuZmluZENodW5rcztcblx0XHQgIH1cblx0XHR9KTtcblx0XG5cdC8qKiovIH0pLFxuXHQvKiAyICovXG5cdC8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblx0XG5cdFx0J3VzZSBzdHJpY3QnO1xuXHRcdFxuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuXHRcdCAgdmFsdWU6IHRydWVcblx0XHR9KTtcblx0XHQvKipcblx0XHQgKiBDcmVhdGVzIGFuIGFycmF5IG9mIGNodW5rIG9iamVjdHMgcmVwcmVzZW50aW5nIGJvdGggaGlnbGlnaHRhYmxlIGFuZCBub24gaGlnaGxpZ2h0YWJsZSBwaWVjZXMgb2YgdGV4dCB0aGF0IG1hdGNoIGVhY2ggc2VhcmNoIHdvcmQuXG5cdFx0ICogQHJldHVybiBBcnJheSBvZiBcImNodW5rc1wiICh3aGVyZSBhIENodW5rIGlzIHsgc3RhcnQ6bnVtYmVyLCBlbmQ6bnVtYmVyLCBoaWdobGlnaHQ6Ym9vbGVhbiB9KVxuXHRcdCAqL1xuXHRcdHZhciBmaW5kQWxsID0gZXhwb3J0cy5maW5kQWxsID0gZnVuY3Rpb24gZmluZEFsbChfcmVmKSB7XG5cdFx0ICB2YXIgYXV0b0VzY2FwZSA9IF9yZWYuYXV0b0VzY2FwZSxcblx0XHQgICAgICBfcmVmJGNhc2VTZW5zaXRpdmUgPSBfcmVmLmNhc2VTZW5zaXRpdmUsXG5cdFx0ICAgICAgY2FzZVNlbnNpdGl2ZSA9IF9yZWYkY2FzZVNlbnNpdGl2ZSA9PT0gdW5kZWZpbmVkID8gZmFsc2UgOiBfcmVmJGNhc2VTZW5zaXRpdmUsXG5cdFx0ICAgICAgX3JlZiRmaW5kQ2h1bmtzID0gX3JlZi5maW5kQ2h1bmtzLFxuXHRcdCAgICAgIGZpbmRDaHVua3MgPSBfcmVmJGZpbmRDaHVua3MgPT09IHVuZGVmaW5lZCA/IGRlZmF1bHRGaW5kQ2h1bmtzIDogX3JlZiRmaW5kQ2h1bmtzLFxuXHRcdCAgICAgIHNhbml0aXplID0gX3JlZi5zYW5pdGl6ZSxcblx0XHQgICAgICBzZWFyY2hXb3JkcyA9IF9yZWYuc2VhcmNoV29yZHMsXG5cdFx0ICAgICAgdGV4dFRvSGlnaGxpZ2h0ID0gX3JlZi50ZXh0VG9IaWdobGlnaHQ7XG5cdFx0ICByZXR1cm4gZmlsbEluQ2h1bmtzKHtcblx0XHQgICAgY2h1bmtzVG9IaWdobGlnaHQ6IGNvbWJpbmVDaHVua3Moe1xuXHRcdCAgICAgIGNodW5rczogZmluZENodW5rcyh7XG5cdFx0ICAgICAgICBhdXRvRXNjYXBlOiBhdXRvRXNjYXBlLFxuXHRcdCAgICAgICAgY2FzZVNlbnNpdGl2ZTogY2FzZVNlbnNpdGl2ZSxcblx0XHQgICAgICAgIHNhbml0aXplOiBzYW5pdGl6ZSxcblx0XHQgICAgICAgIHNlYXJjaFdvcmRzOiBzZWFyY2hXb3Jkcyxcblx0XHQgICAgICAgIHRleHRUb0hpZ2hsaWdodDogdGV4dFRvSGlnaGxpZ2h0XG5cdFx0ICAgICAgfSlcblx0XHQgICAgfSksXG5cdFx0ICAgIHRvdGFsTGVuZ3RoOiB0ZXh0VG9IaWdobGlnaHQgPyB0ZXh0VG9IaWdobGlnaHQubGVuZ3RoIDogMFxuXHRcdCAgfSk7XG5cdFx0fTtcblx0XHRcblx0XHQvKipcblx0XHQgKiBUYWtlcyBhbiBhcnJheSBvZiB7c3RhcnQ6bnVtYmVyLCBlbmQ6bnVtYmVyfSBvYmplY3RzIGFuZCBjb21iaW5lcyBjaHVua3MgdGhhdCBvdmVybGFwIGludG8gc2luZ2xlIGNodW5rcy5cblx0XHQgKiBAcmV0dXJuIHtzdGFydDpudW1iZXIsIGVuZDpudW1iZXJ9W11cblx0XHQgKi9cblx0XHR2YXIgY29tYmluZUNodW5rcyA9IGV4cG9ydHMuY29tYmluZUNodW5rcyA9IGZ1bmN0aW9uIGNvbWJpbmVDaHVua3MoX3JlZjIpIHtcblx0XHQgIHZhciBjaHVua3MgPSBfcmVmMi5jaHVua3M7XG5cdFx0XG5cdFx0ICBjaHVua3MgPSBjaHVua3Muc29ydChmdW5jdGlvbiAoZmlyc3QsIHNlY29uZCkge1xuXHRcdCAgICByZXR1cm4gZmlyc3Quc3RhcnQgLSBzZWNvbmQuc3RhcnQ7XG5cdFx0ICB9KS5yZWR1Y2UoZnVuY3Rpb24gKHByb2Nlc3NlZENodW5rcywgbmV4dENodW5rKSB7XG5cdFx0ICAgIC8vIEZpcnN0IGNodW5rIGp1c3QgZ29lcyBzdHJhaWdodCBpbiB0aGUgYXJyYXkuLi5cblx0XHQgICAgaWYgKHByb2Nlc3NlZENodW5rcy5sZW5ndGggPT09IDApIHtcblx0XHQgICAgICByZXR1cm4gW25leHRDaHVua107XG5cdFx0ICAgIH0gZWxzZSB7XG5cdFx0ICAgICAgLy8gLi4uIHN1YnNlcXVlbnQgY2h1bmtzIGdldCBjaGVja2VkIHRvIHNlZSBpZiB0aGV5IG92ZXJsYXAuLi5cblx0XHQgICAgICB2YXIgcHJldkNodW5rID0gcHJvY2Vzc2VkQ2h1bmtzLnBvcCgpO1xuXHRcdCAgICAgIGlmIChuZXh0Q2h1bmsuc3RhcnQgPD0gcHJldkNodW5rLmVuZCkge1xuXHRcdCAgICAgICAgLy8gSXQgbWF5IGJlIHRoZSBjYXNlIHRoYXQgcHJldkNodW5rIGNvbXBsZXRlbHkgc3Vycm91bmRzIG5leHRDaHVuaywgc28gdGFrZSB0aGVcblx0XHQgICAgICAgIC8vIGxhcmdlc3Qgb2YgdGhlIGVuZCBpbmRlY2VzLlxuXHRcdCAgICAgICAgdmFyIGVuZEluZGV4ID0gTWF0aC5tYXgocHJldkNodW5rLmVuZCwgbmV4dENodW5rLmVuZCk7XG5cdFx0ICAgICAgICBwcm9jZXNzZWRDaHVua3MucHVzaCh7IHN0YXJ0OiBwcmV2Q2h1bmsuc3RhcnQsIGVuZDogZW5kSW5kZXggfSk7XG5cdFx0ICAgICAgfSBlbHNlIHtcblx0XHQgICAgICAgIHByb2Nlc3NlZENodW5rcy5wdXNoKHByZXZDaHVuaywgbmV4dENodW5rKTtcblx0XHQgICAgICB9XG5cdFx0ICAgICAgcmV0dXJuIHByb2Nlc3NlZENodW5rcztcblx0XHQgICAgfVxuXHRcdCAgfSwgW10pO1xuXHRcdFxuXHRcdCAgcmV0dXJuIGNodW5rcztcblx0XHR9O1xuXHRcdFxuXHRcdC8qKlxuXHRcdCAqIEV4YW1pbmUgdGV4dCBmb3IgYW55IG1hdGNoZXMuXG5cdFx0ICogSWYgd2UgZmluZCBtYXRjaGVzLCBhZGQgdGhlbSB0byB0aGUgcmV0dXJuZWQgYXJyYXkgYXMgYSBcImNodW5rXCIgb2JqZWN0ICh7c3RhcnQ6bnVtYmVyLCBlbmQ6bnVtYmVyfSkuXG5cdFx0ICogQHJldHVybiB7c3RhcnQ6bnVtYmVyLCBlbmQ6bnVtYmVyfVtdXG5cdFx0ICovXG5cdFx0dmFyIGRlZmF1bHRGaW5kQ2h1bmtzID0gZnVuY3Rpb24gZGVmYXVsdEZpbmRDaHVua3MoX3JlZjMpIHtcblx0XHQgIHZhciBhdXRvRXNjYXBlID0gX3JlZjMuYXV0b0VzY2FwZSxcblx0XHQgICAgICBjYXNlU2Vuc2l0aXZlID0gX3JlZjMuY2FzZVNlbnNpdGl2ZSxcblx0XHQgICAgICBfcmVmMyRzYW5pdGl6ZSA9IF9yZWYzLnNhbml0aXplLFxuXHRcdCAgICAgIHNhbml0aXplID0gX3JlZjMkc2FuaXRpemUgPT09IHVuZGVmaW5lZCA/IGlkZW50aXR5IDogX3JlZjMkc2FuaXRpemUsXG5cdFx0ICAgICAgc2VhcmNoV29yZHMgPSBfcmVmMy5zZWFyY2hXb3Jkcyxcblx0XHQgICAgICB0ZXh0VG9IaWdobGlnaHQgPSBfcmVmMy50ZXh0VG9IaWdobGlnaHQ7XG5cdFx0XG5cdFx0ICB0ZXh0VG9IaWdobGlnaHQgPSBzYW5pdGl6ZSh0ZXh0VG9IaWdobGlnaHQpO1xuXHRcdFxuXHRcdCAgcmV0dXJuIHNlYXJjaFdvcmRzLmZpbHRlcihmdW5jdGlvbiAoc2VhcmNoV29yZCkge1xuXHRcdCAgICByZXR1cm4gc2VhcmNoV29yZDtcblx0XHQgIH0pIC8vIFJlbW92ZSBlbXB0eSB3b3Jkc1xuXHRcdCAgLnJlZHVjZShmdW5jdGlvbiAoY2h1bmtzLCBzZWFyY2hXb3JkKSB7XG5cdFx0ICAgIHNlYXJjaFdvcmQgPSBzYW5pdGl6ZShzZWFyY2hXb3JkKTtcblx0XHRcblx0XHQgICAgaWYgKGF1dG9Fc2NhcGUpIHtcblx0XHQgICAgICBzZWFyY2hXb3JkID0gZXNjYXBlUmVnRXhwRm4oc2VhcmNoV29yZCk7XG5cdFx0ICAgIH1cblx0XHRcblx0XHQgICAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cChzZWFyY2hXb3JkLCBjYXNlU2Vuc2l0aXZlID8gJ2cnIDogJ2dpJyk7XG5cdFx0XG5cdFx0ICAgIHZhciBtYXRjaCA9IHZvaWQgMDtcblx0XHQgICAgd2hpbGUgKG1hdGNoID0gcmVnZXguZXhlYyh0ZXh0VG9IaWdobGlnaHQpKSB7XG5cdFx0ICAgICAgdmFyIHN0YXJ0ID0gbWF0Y2guaW5kZXg7XG5cdFx0ICAgICAgdmFyIGVuZCA9IHJlZ2V4Lmxhc3RJbmRleDtcblx0XHQgICAgICAvLyBXZSBkbyBub3QgcmV0dXJuIHplcm8tbGVuZ3RoIG1hdGNoZXNcblx0XHQgICAgICBpZiAoZW5kID4gc3RhcnQpIHtcblx0XHQgICAgICAgIGNodW5rcy5wdXNoKHsgc3RhcnQ6IHN0YXJ0LCBlbmQ6IGVuZCB9KTtcblx0XHQgICAgICB9XG5cdFx0XG5cdFx0ICAgICAgLy8gUHJldmVudCBicm93c2VycyBsaWtlIEZpcmVmb3ggZnJvbSBnZXR0aW5nIHN0dWNrIGluIGFuIGluZmluaXRlIGxvb3Bcblx0XHQgICAgICAvLyBTZWUgaHR0cDovL3d3dy5yZWdleGd1cnUuY29tLzIwMDgvMDQvd2F0Y2gtb3V0LWZvci16ZXJvLWxlbmd0aC1tYXRjaGVzL1xuXHRcdCAgICAgIGlmIChtYXRjaC5pbmRleCA9PSByZWdleC5sYXN0SW5kZXgpIHtcblx0XHQgICAgICAgIHJlZ2V4Lmxhc3RJbmRleCsrO1xuXHRcdCAgICAgIH1cblx0XHQgICAgfVxuXHRcdFxuXHRcdCAgICByZXR1cm4gY2h1bmtzO1xuXHRcdCAgfSwgW10pO1xuXHRcdH07XG5cdFx0Ly8gQWxsb3cgdGhlIGZpbmRDaHVua3MgdG8gYmUgb3ZlcnJpZGRlbiBpbiBmaW5kQWxsLFxuXHRcdC8vIGJ1dCBmb3IgYmFja3dhcmRzIGNvbXBhdGliaWxpdHkgd2UgZXhwb3J0IGFzIHRoZSBvbGQgbmFtZVxuXHRcdGV4cG9ydHMuZmluZENodW5rcyA9IGRlZmF1bHRGaW5kQ2h1bmtzO1xuXHRcdFxuXHRcdC8qKlxuXHRcdCAqIEdpdmVuIGEgc2V0IG9mIGNodW5rcyB0byBoaWdobGlnaHQsIGNyZWF0ZSBhbiBhZGRpdGlvbmFsIHNldCBvZiBjaHVua3Ncblx0XHQgKiB0byByZXByZXNlbnQgdGhlIGJpdHMgb2YgdGV4dCBiZXR3ZWVuIHRoZSBoaWdobGlnaHRlZCB0ZXh0LlxuXHRcdCAqIEBwYXJhbSBjaHVua3NUb0hpZ2hsaWdodCB7c3RhcnQ6bnVtYmVyLCBlbmQ6bnVtYmVyfVtdXG5cdFx0ICogQHBhcmFtIHRvdGFsTGVuZ3RoIG51bWJlclxuXHRcdCAqIEByZXR1cm4ge3N0YXJ0Om51bWJlciwgZW5kOm51bWJlciwgaGlnaGxpZ2h0OmJvb2xlYW59W11cblx0XHQgKi9cblx0XHRcblx0XHR2YXIgZmlsbEluQ2h1bmtzID0gZXhwb3J0cy5maWxsSW5DaHVua3MgPSBmdW5jdGlvbiBmaWxsSW5DaHVua3MoX3JlZjQpIHtcblx0XHQgIHZhciBjaHVua3NUb0hpZ2hsaWdodCA9IF9yZWY0LmNodW5rc1RvSGlnaGxpZ2h0LFxuXHRcdCAgICAgIHRvdGFsTGVuZ3RoID0gX3JlZjQudG90YWxMZW5ndGg7XG5cdFx0XG5cdFx0ICB2YXIgYWxsQ2h1bmtzID0gW107XG5cdFx0ICB2YXIgYXBwZW5kID0gZnVuY3Rpb24gYXBwZW5kKHN0YXJ0LCBlbmQsIGhpZ2hsaWdodCkge1xuXHRcdCAgICBpZiAoZW5kIC0gc3RhcnQgPiAwKSB7XG5cdFx0ICAgICAgYWxsQ2h1bmtzLnB1c2goe1xuXHRcdCAgICAgICAgc3RhcnQ6IHN0YXJ0LFxuXHRcdCAgICAgICAgZW5kOiBlbmQsXG5cdFx0ICAgICAgICBoaWdobGlnaHQ6IGhpZ2hsaWdodFxuXHRcdCAgICAgIH0pO1xuXHRcdCAgICB9XG5cdFx0ICB9O1xuXHRcdFxuXHRcdCAgaWYgKGNodW5rc1RvSGlnaGxpZ2h0Lmxlbmd0aCA9PT0gMCkge1xuXHRcdCAgICBhcHBlbmQoMCwgdG90YWxMZW5ndGgsIGZhbHNlKTtcblx0XHQgIH0gZWxzZSB7XG5cdFx0ICAgIHZhciBsYXN0SW5kZXggPSAwO1xuXHRcdCAgICBjaHVua3NUb0hpZ2hsaWdodC5mb3JFYWNoKGZ1bmN0aW9uIChjaHVuaykge1xuXHRcdCAgICAgIGFwcGVuZChsYXN0SW5kZXgsIGNodW5rLnN0YXJ0LCBmYWxzZSk7XG5cdFx0ICAgICAgYXBwZW5kKGNodW5rLnN0YXJ0LCBjaHVuay5lbmQsIHRydWUpO1xuXHRcdCAgICAgIGxhc3RJbmRleCA9IGNodW5rLmVuZDtcblx0XHQgICAgfSk7XG5cdFx0ICAgIGFwcGVuZChsYXN0SW5kZXgsIHRvdGFsTGVuZ3RoLCBmYWxzZSk7XG5cdFx0ICB9XG5cdFx0ICByZXR1cm4gYWxsQ2h1bmtzO1xuXHRcdH07XG5cdFx0XG5cdFx0ZnVuY3Rpb24gaWRlbnRpdHkodmFsdWUpIHtcblx0XHQgIHJldHVybiB2YWx1ZTtcblx0XHR9XG5cdFx0XG5cdFx0ZnVuY3Rpb24gZXNjYXBlUmVnRXhwRm4oc3RyKSB7XG5cdFx0ICByZXR1cm4gc3RyLnJlcGxhY2UoL1tcXC1cXFtcXF1cXC9cXHtcXH1cXChcXClcXCpcXCtcXD9cXC5cXFxcXFxeXFwkXFx8XS9nLCAnXFxcXCQmJyk7XG5cdFx0fVxuXHRcblx0LyoqKi8gfSlcblx0LyoqKioqKi8gXSk7XG5cdC8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcFxuXG4vKioqLyB9KSxcbi8qIDQgKi9cbi8qKiovIChmdW5jdGlvbihtb2R1bGUsIGV4cG9ydHMpIHtcblxuXHRtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWFjdFwiKTtcblxuLyoqKi8gfSksXG4vKiA1ICovXG4vKioqLyAoZnVuY3Rpb24obW9kdWxlLCBleHBvcnRzKSB7XG5cblx0J3VzZSBzdHJpY3QnO1xuXHRcblx0dmFyIHNpbXBsZUlzRXF1YWwgPSBmdW5jdGlvbiBzaW1wbGVJc0VxdWFsKGEsIGIpIHtcblx0ICByZXR1cm4gYSA9PT0gYjtcblx0fTtcblx0XG5cdGZ1bmN0aW9uIGluZGV4IChyZXN1bHRGbikge1xuXHQgIHZhciBpc0VxdWFsID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBzaW1wbGVJc0VxdWFsO1xuXHRcblx0ICB2YXIgbGFzdFRoaXMgPSB2b2lkIDA7XG5cdCAgdmFyIGxhc3RBcmdzID0gW107XG5cdCAgdmFyIGxhc3RSZXN1bHQgPSB2b2lkIDA7XG5cdCAgdmFyIGNhbGxlZE9uY2UgPSBmYWxzZTtcblx0XG5cdCAgdmFyIGlzTmV3QXJnRXF1YWxUb0xhc3QgPSBmdW5jdGlvbiBpc05ld0FyZ0VxdWFsVG9MYXN0KG5ld0FyZywgaW5kZXgpIHtcblx0ICAgIHJldHVybiBpc0VxdWFsKG5ld0FyZywgbGFzdEFyZ3NbaW5kZXhdKTtcblx0ICB9O1xuXHRcblx0ICB2YXIgcmVzdWx0ID0gZnVuY3Rpb24gcmVzdWx0KCkge1xuXHQgICAgZm9yICh2YXIgX2xlbiA9IGFyZ3VtZW50cy5sZW5ndGgsIG5ld0FyZ3MgPSBBcnJheShfbGVuKSwgX2tleSA9IDA7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcblx0ICAgICAgbmV3QXJnc1tfa2V5XSA9IGFyZ3VtZW50c1tfa2V5XTtcblx0ICAgIH1cblx0XG5cdCAgICBpZiAoY2FsbGVkT25jZSAmJiBsYXN0VGhpcyA9PT0gdGhpcyAmJiBuZXdBcmdzLmxlbmd0aCA9PT0gbGFzdEFyZ3MubGVuZ3RoICYmIG5ld0FyZ3MuZXZlcnkoaXNOZXdBcmdFcXVhbFRvTGFzdCkpIHtcblx0ICAgICAgcmV0dXJuIGxhc3RSZXN1bHQ7XG5cdCAgICB9XG5cdFxuXHQgICAgY2FsbGVkT25jZSA9IHRydWU7XG5cdCAgICBsYXN0VGhpcyA9IHRoaXM7XG5cdCAgICBsYXN0QXJncyA9IG5ld0FyZ3M7XG5cdCAgICBsYXN0UmVzdWx0ID0gcmVzdWx0Rm4uYXBwbHkodGhpcywgbmV3QXJncyk7XG5cdCAgICByZXR1cm4gbGFzdFJlc3VsdDtcblx0ICB9O1xuXHRcblx0ICByZXR1cm4gcmVzdWx0O1xuXHR9XG5cdFxuXHRtb2R1bGUuZXhwb3J0cyA9IGluZGV4O1xuXG5cbi8qKiovIH0pXG4vKioqKioqLyBdKTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW1haW4uanMubWFwIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-highlight-words/dist/main.js\n");

/***/ })

};
;